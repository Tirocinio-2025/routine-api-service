openapi: 3.0.3
info:
  title: Routine & Alert API
  version: 1.0.7
  description: >
    API per la gestione di Routine e Alert.
    Nessun campo 'id' Ã¨ mai presente nei payload di risposta; gli 'id' esistono
    solo come path parameters per indirizzare le risorse.

servers:
  - url: http://localhost:8080
    description: Local

tags:
  - name: Routines
  - name: Alerts

paths:
  /routines:
    post:
      operationId: createRoutine
      tags: [Routines]
      summary: Crea routine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutineCreate'
            example:
              nomeRoutine: "nome"
              alerts:
                - oraInizio: "14:00"
                  oraFine: "18:00"
                  codici:
                    - descrizione: 1
                  testoNotifica: "testo recuperato da risposta API"
                  citta: "Silvi"
      responses:
        '201':
          description: Creato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routine'

  /routines/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: integer, format: int64 }
    get:
      operationId: getRoutine
      tags: [Routines]
      summary: Dettaglio routine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routine'
        '404':
          description: Non trovata
    put:
      operationId: replaceRoutine
      tags: [Routines]
      summary: Sostituisce una routine (PUT)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutineUpdate'
      responses:
        '200':
          description: Aggiornata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routine'
        '404':
          description: Non trovata
    patch:
      operationId: updateRoutine
      tags: [Routines]
      summary: Aggiorna parzialmente una routine (PATCH)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutinePatch'
      responses:
        '200':
          description: Aggiornata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Routine'
        '404':
          description: Non trovata
    delete:
      operationId: deleteRoutine
      tags: [Routines]
      summary: Elimina routine
      responses:
        '204':
          description: Eliminata
        '404':
          description: Non trovata

  /routines/{id}/alerts:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: integer, format: int64 }
    get:
      operationId: listRoutineAlerts
      tags: [Routines, Alerts]
      summary: Lista degli alert associati alla routine
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
        '404':
          description: Routine non trovata
    post:
      operationId: addAlertToRoutine
      tags: [Routines, Alerts]
      summary: Aggiunge un nuovo alert alla routine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertCreate'
      responses:
        '201':
          description: Creato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '404':
          description: Routine non trovata

  /alerts:
    get:
      operationId: listAlerts
      tags: [Alerts]
      summary: Lista alert
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
    post:
      operationId: createAlert
      tags: [Alerts]
      summary: Crea alert
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertCreate'
      responses:
        '201':
          description: Creato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'

  /alerts/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: integer, format: int64 }
    get:
      operationId: getAlert
      tags: [Alerts]
      summary: Dettaglio alert
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '404':
          description: Non trovato
    put:
      operationId: replaceAlert
      tags: [Alerts]
      summary: Sostituisce un alert (PUT)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertUpdate'
      responses:
        '200':
          description: Aggiornato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '404':
          description: Non trovato
    patch:
      operationId: updateAlert
      tags: [Alerts]
      summary: Aggiorna parzialmente un alert (PATCH)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertPatch'
      responses:
        '200':
          description: Aggiornato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        '404':
          description: Non trovato
    delete:
      operationId: deleteAlert
      tags: [Alerts]
      summary: Elimina alert
      responses:
        '204':
          description: Eliminato
        '404':
          description: Non trovato

  /alerts/{id}/children:
    parameters:
      - in: path
        name: id
        required: true
        schema: { type: integer, format: int64 }
    get:
      operationId: listAlertChildren
      tags: [Alerts]
      summary: Restituisce gli alert figli (nessun id in output)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'
        '404':
          description: Non trovato

components:
  schemas:
    # ===== Routine (OUTPUT senza id) =====
    Routine:
      type: object
      properties:
        nomeRoutine:
          type: string
          example: Routine Mattutina
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
      required: [nomeRoutine]

    # ===== Routine CREATE/UPDATE/PATCH (senza id) =====
    RoutineCreate:
      type: object
      properties:
        nomeRoutine:
          type: string
          example: Routine Mattutina
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
      required: [nomeRoutine]
      description: Payload di creazione routine con alert annidati (senza id).

    RoutineUpdate:
      allOf:
        - $ref: '#/components/schemas/RoutineCreate'

    RoutinePatch:
      type: object
      properties:
        nomeRoutine:
          type: string
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'

    # ===== Alert (OUTPUT & INPUT senza id) =====
    Alert:
      type: object
      properties:
        oraInizio:
          type: string
          description: Ora di inizio (HH:mm).
          pattern: '^([01]\\d|2[0-3]):[0-5]\\d$'
          example: "14:00"
        oraFine:
          type: string
          description: Ora di fine (HH:mm).
          pattern: '^([01]\\d|2[0-3]):[0-5]\\d$'
          example: "18:00"
        codici:
          type: array
          items:
            $ref: '#/components/schemas/Codice'
        testoNotifica:
          type: string
          maxLength: 100
          example: "testo recuperato da risposta API"
        citta:
          type: string
          maxLength: 100
          example: "Silvi"
      required: [oraInizio, oraFine, codici, testoNotifica, citta]

    Codice:
      type: object
      properties:
        descrizione:
          type: integer
          description: Identificativo/descrizione del codice.
          example: 1
      required: [descrizione]

    # ===== Per endpoint /alerts (input shape = output shape, senza id) =====
    AlertCreate:
      allOf:
        - $ref: '#/components/schemas/Alert'

    AlertUpdate:
      allOf:
        - $ref: '#/components/schemas/Alert'

    AlertPatch:
      type: object
      properties:
        oraInizio:
          type: string
          pattern: '^([01]\\d|2[0-3]):[0-5]\\d$'
        oraFine:
          type: string
          pattern: '^([01]\\d|2[0-3]):[0-5]\\d$'
        codici:
          type: array
          items:
            $ref: '#/components/schemas/Codice'
        testoNotifica:
          type: string
          maxLength: 100
        citta:
          type: string
          maxLength: 100
